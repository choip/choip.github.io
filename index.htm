<!DOCTYPE html>
<html>
<head>
    <!-- <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha256-k2WSCIexGzOj3Euiig+TlR8gA0EmPjuc79OEeY5L45g=" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous"></script>
    <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" type="text/css"/> -->

    <script type='text/javascript', src="jQuery/jquery-3.2.1.js"></script>
    <script type='text/javascript', src="jquery-ui-1.12.1/jquery-ui.js"></script>
    <link href="jquery-ui-1.12.1/jquery-ui.css" rel="stylesheet" type="text/css"/>
    
    <style>
        /* #map {
            height: 94vh;
            width: 100%;
        } */
        html,
        body {
            height: 100%;
            width: 100%;
            margin: 0px;
            padding: 0px
        }
    </style>

</head>
<body>
    <div id="floating-panel">
        <b>Origin: </b>
        <input id="startAC">
        <b>Destination: </b>
        <input id="endAC">
        <button id="buttonDirection" type="button">Direction</button>
        <b>Category1: </b><select id="selectCategory"></select>
        <b>Category2: </b><select id="selectCategory2"></select>
    </div>
    <div id="map" style="width:100%;height:97vh;"></div>

    <script>
        var markersData = [
            {
                position: {lat: 13.051828, lng: 80.251548},
                category: 'Office',
                description: 'Consulate Main',
            }, {
                position: { lat: 13.045188, lng: 80.255144 },
                // position: new google.maps.LatLng(13.045188, 80.255144),
                category: 'Residence',
                description: 'Kumara Guru',
            }, {
                position: { lat: 13.031430655221271, lng: 80.24697705546839 },
                category: 'Residence',
                description: 'River House',
            }, {
                position: { lat: 13.026005158148841, lng: 80.24584116441804 },
                category: 'Residence',
                description: 'TBR 2',
            }, {
                position: { lat: 13.026245500000005, lng: 80.2455354 },
                category: 'Residence',
                description: 'TBR 3',
            }, {
                position: { lat: 13.026453300000018, lng: 80.24532880000004 },
                category: 'Residence',
                description: 'TBR 4',
            }, {
                position: { lat: 13.021122300000021, lng: 80.2424575 },
                category: 'Residence',
                description: 'Atrium',
            }, {
                position: { lat: 13.029773300000002, lng: 80.24819079999997 },
                category: 'Residence',
                description: 'Kannan APT',
            }, {
                position: { lat: 13.031741000000018, lng: 80.24701060000007 },
                category: 'Residence',
                description: 'Flame',
            }, {
                position: { lat: 13.021915400000012, lng: 80.25604429999999 },
                category: 'Residence',
                description: 'Lincoln Lower',
            }, {
                position: { lat: 13.046289, lng: 80.256254 },
                category: 'Restaurant',
                description: 'Nandos',
            }, {
                position: { lat: 13.044619, lng: 80.255564 },
                category: 'Restaurant',
                description: 'Dario',
            },
        ];

        var categoryData = ['All', 'None', 'Office', 'Residence', 'Restaurant'];

        markersAC=[];
        markersData.forEach(function(markersData){
            markersAC.push(markersData.description);
        });

        $('#startAC').autocomplete({
            source: markersAC,
            minLength: 0,
        });
        $('#endAC').autocomplete({
            source: markersAC,
            minLength: 0,
        });

        
        // var buttonDirection = document.getElementById('buttonDirection');
        var selectCategory = document.getElementById("selectCategory");
        var selectCategory2 = document.getElementById("selectCategory2");

        initSelectCategory();
        
        function initSelectCategory() {
            selectCategory.innerHTML = null;
            selectCategory2.innerHTML = null;
            categoryData.forEach(function(categoryData) {
                var optionValue = categoryData;
                selectCategory.options[selectCategory.options.length] = new Option(categoryData, optionValue);
                selectCategory2.options[selectCategory2.options.length] = new Option(categoryData, optionValue);
            });
            selectCategory2.selectedIndex = 1;
        }

        $('#startAC').mouseover(function(){
            $('#startAC').val('');
            // $('#startAC').focus();
            $('#startAC').autocomplete("search")
        });
        $('#endAC').mouseover(function(){
            $('#endAC').val('');
            // $('#endAC').focus();
            $('#endAC').autocomplete("search")
        });

        setInterval(function(){
            var startHovered = $('#startAC:hover').length > 0
            var endHovered = $('#endAC:hover').length > 0
            var hovered = $('ul.ui-autocomplete:hover').length > 0
            if(!hovered && !endHovered && !startHovered) {
                $('#startAC').autocomplete( "close" );
                $('#endAC').autocomplete( "close" );
                if (!$('#startAC').val()){
                    infoWindowStart.close(map);
                }
                if (!$('#endAC').val()){
                    infoWindowEnd.close(map);
                }
            }
        }, 100);

        $('#startAC').on("autocompletefocus", function(e, ui){
            startACFocusHandler(ui.item.label);
        });
        $('#endAC').on("autocompletefocus", function(e, ui){
            endACFocusHandler(ui.item.label);
        });

        $('#startAC').on("autocompleteselect", function(e, ui){
            fitBoundsStartEnd();
        });
        $('#endAC').on("autocompleteselect", function(e, ui){
            fitBoundsStartEnd();
        });
        
        function startACFocusHandler(startSelected) {
            var foundItem = markersData.find(foundItem => foundItem.description == startSelected);
            startCategory = foundItem.category;
            fitBoundsPositions.start = foundItem.position;
            infoWindowStart.setPosition(foundItem.position);
            var infoWindowContent = '<b>' + foundItem.description + '</b><br>Start';
            infoWindowStart.setContent(infoWindowContent);
            infoWindowStart.open(map);
        };
        
        function endACFocusHandler(endSelected) {
            var foundItem = markersData.find(foundItem => foundItem.description == endSelected);
            endCategory = foundItem.category;
            fitBoundsPositions.end = foundItem.position;
            infoWindowEnd.setPosition(foundItem.position);
            var infoWindowContent = '<b>' + foundItem.description + '</b><br>Destination';
            infoWindowEnd.setContent(infoWindowContent);
            infoWindowEnd.open(map);
        };

        function setSelectOptions(selectedCategory, selectedCategory2) {
            var bounds = new google.maps.LatLngBounds();
            markersAC=[];
            markersData.forEach(function(markersData){
                var optionValue = markersData.position.lat + "," + markersData.position.lng;
                if (selectedCategory == 'All' || selectedCategory2 == 'All') {
                        markersAC.push(markersData.description);
                        bounds.extend(markersData.position);
                }else{
                    if (markersData.category == selectedCategory || markersData.category == selectedCategory2) {
                            markersAC.push(markersData.description);
                            bounds.extend(markersData.position);
                    }
                }
            });
            $('#startAC').autocomplete({
                source: markersAC,
                minLength: 0,
            });
            $('#endAC').autocomplete({
                source: markersAC,
                minLength: 0,
            });
            var startInput = $('#startAC').val();
            var foundItem = markersData.find(foundItem => foundItem.description == startInput);
            if (foundItem){
                if (foundItem.category != selectedCategory && foundItem.category != selectedCategory2){
                    if (selectedCategory != 'All' && selectedCategory2 != 'All'){
                        $('#startAC').val('');
                    }
                }
            }
            var endInput = $('#endAC').val();
            var foundItem = markersData.find(foundItem => foundItem.description == endInput);
            if (foundItem){
                if (foundItem.category != selectedCategory && foundItem.category != selectedCategory2){
                    if (selectedCategory != 'All' && selectedCategory2 != 'All'){
                        $('#endAC').val('');
                    }
                }
            }
            if (currentPosition) bounds.extend(currentPosition);
            if(selectedCategory != 'None' || selectedCategory2 != 'None') map.fitBounds(bounds);           
        }
        
        var markerImageBase1 = 'https://maps.google.com/mapfiles/kml/pal3/';
        var markerImageBase2 = 'https://maps.google.com/mapfiles/kml/pal2/';
        var markerImage = {
            Residence: {
                icon: markerImageBase1 + 'icon56.png'
            },
            Office: {
                icon: markerImageBase1 + 'icon21.png'
            },
            Restaurant: {
                icon: markerImageBase2 + 'icon32.png'
            }
        };

        var map, infoWindowCurrent, infoWindowMarkers, infoWindowStart, infoWindowEnd;
        var currentPosition;
        var centerPosition = {lat:13.04, lng:80.251548};
        var consulatePosition = markersData[0].position;

        function initMap() {

            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 16,
                center: centerPosition,
            });

            infoWindowCurrent = new google.maps.InfoWindow({
            });
            infoWindowMarkers = new google.maps.InfoWindow({
            });
            infoWindowStart = new google.maps.InfoWindow({
                pixelOffset: new google.maps.Size(0,-32)
            });
            infoWindowEnd = new google.maps.InfoWindow({
                pixelOffset: new google.maps.Size(0,-32)
            });
            
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    currentPosition = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    infoWindowCurrent.setPosition(currentPosition);
                    infoWindowCurrent.setContent('Current Location');
                    infoWindowCurrent.open(map);
                    //map.setCenter(currentPosition);
                    initMarkers(true);
                    fitBoundsAll();
                }, function () {
                    initMarkers(true);
                    fitBoundsAll();
                    handleLocationError(true, infoWindowMarkers, map.getCenter());
                });
            } else {
                initMarkers(true);
                fitBoundsAll();
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindowMarkers, map.getCenter());
            }
        }

        var dstPosition;
        var markers = [];

        function initMarkers(gotCurrentPosition) {
            markersData.forEach(function (markersData) {
                var marker = new google.maps.Marker({
                    // position: markersData.position,
                    position: new google.maps.LatLng(markersData.position.lat, markersData.position.lng),
                    icon: markerImage[markersData.category].icon,
                    title: markersData.description,
                    map: map
                });
                marker.addListener('mouseover', function () {
                    dstPosition = markersData.position;
                    var infoWindowContent;
                    if (gotCurrentPosition) {
                        infoWindowContent = 
                            '<b>' + this.title + '</b>' +
                            '<br /><a href="#" onclick = "directionCurrentLocation()">Direction from the Current Location</a>';
                    }else{
                        infoWindowContent = 
                            '<b>' + this.title + '</b>' +
                            '<br /><a href="https://www.google.com/maps/dir/?api=1&origin=' + selectStart.value +
                            '&destination=' + this.position.lat + ',' + this.position.lng +
                            '&travelmode=driving" target="_blank">Direction from the Start</a>' +
                            '<br /><a href="https://www.google.com/maps/dir/?api=1&origin=' + 
                            this.position.lat + ',' + this.position.lng + '&destination=' + selectEnd.value +
                            '&travelmode=driving" target="_blank">Direction to the Destination</a>';
                    }                    
                    infoWindowMarkers.setContent(infoWindowContent);
                    infoWindowMarkers.open(map, this);
                });
                marker.addListener('mouseout', function () {
                    // infoWindowMarkers.close();
                });
                markers.push(marker);
            });
        }

        function setMarkers(selectedCategory, selectedCategory2){
            if (selectedCategory == 'All'||selectedCategory2 == 'All') {
                markers.forEach(function (markers) {
                    markers.setMap(map);
                });
            }
            else {
                markers.forEach(function (markers) {
                    markers.setMap(null);
                });
                for (var i = 0; i < markersData.length; i++) {
                    if (markersData[i].category == selectedCategory || markersData[i].category == selectedCategory2){
                        markers[i].setMap(map);
                    }
                }
            }
        }

        function directionCurrentLocation(){
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    currentPosition = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var directionUrl = 
                        'https://www.google.com/maps/dir/?api=1&origin=' + currentPosition.lat + ',' + currentPosition.lng + 
                        '&destination=' + dstPosition.lat + ',' + dstPosition.lng + '&travelmode=driving';
                    window.open(directionUrl);
                }, function () {
                    handleLocationError(true, infoWindowCurrent, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindowCurrent, map.getCenter());
            }
        }
        
        $('#buttonDirection').click(function(){
            if ($('#startAC').val() && $('#endAC').val()){
                var foundItem = markersData.find(foundItem => foundItem.description == $('#startAC').val());
                var startPosition = foundItem.position;
                var foundItem = markersData.find(foundItem => foundItem.description == $('#endAC').val());
                var endPosition = foundItem.position;
                window.open('https://www.google.com/maps/dir/?api=1&origin=' + startPosition.lat + ',' + startPosition.lng +
                 '&destination=' + endPosition.lat + ',' + endPosition.lng + '&travelmode=driving');
            }
            else{
                alert('Origin and Destination both need to be selected');
            }
        });

        selectCategory.addEventListener('change', selectCategoryChangeHandler);
        selectCategory2.addEventListener('change', selectCategoryChangeHandler);
        
        var selectedCategory, selectedCategory2, startCategory, endCategory;
        var fitBoundsPositions = {start:null, end:null};

        function selectCategoryChangeHandler() {
            selectedCategory = selectCategory.options[selectCategory.selectedIndex].text
            selectedCategory2 = selectCategory2.options[selectCategory2.selectedIndex].text
            setSelectOptions(selectedCategory, selectedCategory2);
            setMarkers(selectedCategory, selectedCategory2);
            if (startCategory != selectedCategory && startCategory != selectedCategory2 && selectedCategory != 'All' && selectedCategory2 != 'All')
                infoWindowStart.close();
            if (endCategory != selectedCategory && endCategory != selectedCategory2 && selectedCategory != 'All' && selectedCategory2 != 'All')
                infoWindowEnd.close();
        };

        function handleLocationError(browserHasGeolocation, infoWindowCurrent, pos) {
            infoWindowCurrent.setPosition(pos);
            infoWindowCurrent.setContent(browserHasGeolocation ?
              'Error: The Geolocation service failed.' :
              'Error: Your browser doesn\'t support geolocation.');
            // infoWindowCurrent.open(map);
        }

        function fitBoundsStartEnd(){
            var bounds = new google.maps.LatLngBounds();
            if (currentPosition) bounds.extend(currentPosition);
            if (fitBoundsPositions.start) bounds.extend(fitBoundsPositions.start);
            if (fitBoundsPositions.end) bounds.extend(fitBoundsPositions.end);
            map.fitBounds(bounds);
            var currentZoomLevel = map.getZoom();
            map.setZoom(currentZoomLevel-1);
        }
        function fitBoundsAll(){
            var bounds = new google.maps.LatLngBounds();
            markersData.forEach(function(markersData){
                bounds.extend(markersData.position);
            });
            // bounds.extend(currentPosition);
            map.fitBounds(bounds);            
        }

    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAsAduur2QPUWBMNEhKNG5cFwVy4wAJf5g&callback=initMap">
    </script>
</body>
</html>