<!DOCTYPE html>
<html>
<head>
    <style>
        /* #map {
            height: 94vh;
            width: 100%;
        } */
        html,
        body {
            height: 100%;
            width: 100%;
            margin: 0px;
            padding: 0px
        }
    </style>
</head>
<body>
    <div id="floating-panel">
        <b>Start: </b><select id="selectStart" style="width: 150px" onfocus="selectedIndex=-1"></select>
        <b>Destination: </b><select id="selectEnd" style="width: 150px" onfocus="selectedIndex=-1"></select>
        <button id="buttonDirection" type="button">Direction</button>
        <b>Category1: </b><select id="selectCategory" onfocus="this.selectedIndex=-1"></select>
        <b>Category2: </b><select id="selectCategory2" onfocus="this.selectedIndex=-1"></select>
    </div>
    <div id="map" style="width:100%;height:95%;"></div>

    <script>
        var markersPub = [
            {
                position: {lat: 13.051828, lng: 80.251548},
                category: 'Office',
                description: 'Consulate Main',
            }, {
                position: { lat: 13.045188, lng: 80.255144 },
                // position: new google.maps.LatLng(13.045188, 80.255144),
                category: 'Residence',
                description: 'Kumara Guru',
            }, {
                position: { lat: 13.031430655221271, lng: 80.24697705546839 },
                category: 'Residence',
                description: 'River House',
            }, {
                position: { lat: 13.026005158148841, lng: 80.24584116441804 },
                category: 'Residence',
                description: 'TBR 2',
            }, {
                position: { lat: 13.026245500000005, lng: 80.2455354 },
                category: 'Residence',
                description: 'TBR 3',
            }, {
                position: { lat: 13.026453300000018, lng: 80.24532880000004 },
                category: 'Residence',
                description: 'TBR 4',
            }, {
                position: { lat: 13.021122300000021, lng: 80.2424575 },
                category: 'Residence',
                description: 'Atrium',
            }, {
                position: { lat: 13.029773300000002, lng: 80.24819079999997 },
                category: 'Residence',
                description: 'Kannan APT',
            }, {
                position: { lat: 13.031741000000018, lng: 80.24701060000007 },
                category: 'Residence',
                description: 'Flame',
            }, {
                position: { lat: 13.021915400000012, lng: 80.25604429999999 },
                category: 'Residence',
                description: 'Lincoln Lower',
            }, {
                position: { lat: 13.046289, lng: 80.256254 },
                category: 'Restaurant',
                description: 'Nandos',
            }, {
                position: { lat: 13.044619, lng: 80.255564 },
                category: 'Restaurant',
                description: 'Dario',
            },
        ];

        var categoryPub = ['All', 'Office', 'Residence', 'Restaurant'];
        var category2Pub = ['All', 'Office', 'Residence', 'Restaurant'];
        
        var selectStart = document.getElementById("selectStart");
        var selectEnd = document.getElementById("selectEnd");
        var buttonDirection = document.getElementById('buttonDirection');
        var selectCategory = document.getElementById("selectCategory");
        var selectCategory2 = document.getElementById("selectCategory2");
        
        markersPub.forEach(function(markersPub){
            var optionValue = markersPub.position.lat + "," + markersPub.position.lng;
            selectStart.options[selectStart.options.length] = new Option(markersPub.description, optionValue);
            selectEnd.options[selectEnd.options.length] = new Option(markersPub.description, optionValue);
        });

        categoryPub.forEach(function(categoryPub) {
            var optionValue = categoryPub;
            selectCategory.options[selectCategory.options.length] = new Option(categoryPub, optionValue);
        });
        category2Pub.forEach(function(category2Pub) {
            var optionValue = category2Pub;
            selectCategory2.options[selectCategory2.options.length] = new Option(category2Pub, optionValue);
        });

        var markerImageBase1 = 'https://maps.google.com/mapfiles/kml/pal3/';
        var markerImageBase2 = 'https://maps.google.com/mapfiles/kml/pal2/';
        var markerImage = {
            Residence: {
                icon: markerImageBase1 + 'icon56.png'
            },
            Office: {
                icon: markerImageBase1 + 'icon21.png'
            },
            Restaurant: {
                icon: markerImageBase2 + 'icon32.png'
            }
        };

        var map, infoWindowCurrent, infoWindowMarkers, infoWindowStart, infoWindowEnd;
        var currentPosition;
        var centerPosition = {lat:13.04, lng:80.251548};
        var consulatePosition = markersPub[0].position;

        function initMap() {

            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 16,
                center: centerPosition,
            });

            infoWindowCurrent = new google.maps.InfoWindow({
            });
            infoWindowMarkers = new google.maps.InfoWindow({
            });
            infoWindowStart = new google.maps.InfoWindow({
                pixelOffset: new google.maps.Size(0,-32)
            });
            infoWindowEnd = new google.maps.InfoWindow({
                pixelOffset: new google.maps.Size(0,-32)
            });
            
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    currentPosition = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    infoWindowCurrent.setPosition(currentPosition);
                    infoWindowCurrent.setContent('Current Location');
                    infoWindowCurrent.open(map);
                    //map.setCenter(currentPosition);
                    fitBoundsAll();
                    initMarkers(true);
                }, function () {
                    initMarkers(false);
                    handleLocationError(true, infoWindowMarkers, map.getCenter());
                });
            } else {
                initMarkers(false);
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindowMarkers, map.getCenter());
            }
        }

        var dstPosition;
        var markers = [];
        function initMarkers(gotCurrentPosition) {
            markersPub.forEach(function (markersPub) {
                var marker = new google.maps.Marker({
                    // position: markersPub.position,
                    position: new google.maps.LatLng(markersPub.position.lat, markersPub.position.lng),
                    icon: markerImage[markersPub.category].icon,
                    title: markersPub.description,
                    map: map
                });
                marker.addListener('mouseover', function () {
                    dstPosition = markersPub.position;
                    var infoWindowContent;
                    if (gotCurrentPosition) {
                        infoWindowContent = 
                            '<b>' + this.title + '</b>' +
                            '<br /><a href="#" onclick = "directionCurrentLocation()">Direction from the Current Location</a>';
                    }else{
                        infoWindowContent = 
                            '<b>' + this.title + '</b>' +
                            '<br /><a href="https://www.google.com/maps/dir/?api=1&origin=' + selectStart.value +
                            '&destination=' + this.position.lat + ',' + this.position.lng +
                            '&travelmode=driving" target="_blank">Direction from the Start</a>' +
                            '<br /><a href="https://www.google.com/maps/dir/?api=1&origin=' + 
                            this.position.lat + ',' + this.position.lng + '&destination=' + selectEnd.value +
                            '&travelmode=driving" target="_blank">Direction to the Destination</a>';
                    }                    
                    infoWindowMarkers.setContent(infoWindowContent);
                    infoWindowMarkers.open(map, this);
                });
                marker.addListener('mouseout', function () {
                    // infoWindowMarkers.close();
                });
                markers.push(marker);
            });
        }

        function setSelectOptions(selectedCategory, selectedCategory2) {
            selectStart.innerHTML = null;
            selectEnd.innerHTML = null;
            var bounds = new google.maps.LatLngBounds();
            markersPub.forEach(function(markersPub){
                var optionValue = markersPub.position.lat + "," + markersPub.position.lng;
                if (selectedCategory == 'All' || selectedCategory2 == 'All') {
                    selectStart.options[selectStart.options.length] = new Option(markersPub.description, optionValue);
                    selectEnd.options[selectEnd.options.length] = new Option(markersPub.description, optionValue);
                    bounds.extend(markersPub.position);
                }else{
                    if (markersPub.category == selectedCategory || markersPub.category == selectedCategory2) {
                        selectStart.options[selectStart.options.length] = new Option(markersPub.description, optionValue);
                        selectEnd.options[selectEnd.options.length] = new Option(markersPub.description, optionValue);
                        bounds.extend(markersPub.position);
                    }
                }
            });
            if (currentPosition) bounds.extend(currentPosition);
            map.fitBounds(bounds);            
        }

        function setMarkers(selectedCategory, selectedCategory2){
            if (selectedCategory == 'All'||selectedCategory2 == 'All') {
                markers.forEach(function (markers) {
                    markers.setMap(map);
                });
            }
            else {
                markers.forEach(function (markers) {
                    markers.setMap(null);
                });
                for (var i = 0; i < markersPub.length; i++) {
                    if (markersPub[i].category == selectedCategory || markersPub[i].category == selectedCategory2){
                        markers[i].setMap(map);
                    }
                }
            }
        }

        function directionCurrentLocation(){
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    currentPosition = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var directionUrl = 
                        'https://www.google.com/maps/dir/?api=1&origin=' + currentPosition.lat + ',' + currentPosition.lng + 
                        '&destination=' + dstPosition.lat + ',' + dstPosition.lng + '&travelmode=driving';
                    window.open(directionUrl);
                }, function () {
                    handleLocationError(true, infoWindowCurrent, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindowCurrent, map.getCenter());
            }
        }

        selectStart.addEventListener('change', selectStartChangeHandler);
        selectEnd.addEventListener('change', selectEndChangeHandler);
        buttonDirection.addEventListener('click', function(){
            window.open('https://www.google.com/maps/dir/?api=1&origin=' + selectStart.value + 
                        '&destination=' + selectEnd.value + '&travelmode=driving');
        });
        selectCategory.addEventListener('change', selectCategoryChangeHandler);
        selectCategory2.addEventListener('change', selectCategoryChangeHandler);
        
        var selectedCategory;
        var selectedCategory2;

        var fitBoundsPositions = {start:null, end:null};
        
        function selectStartChangeHandler() {
            var foundItem = markersPub.find(foundItem => foundItem.description == selectStart.options[selectStart.selectedIndex].text);
            // map.setCenter(centerPosition);
            // map.setZoom(14);
            fitBoundsPositions.start = foundItem.position;
            fitBoundsStartEnd();
            infoWindowStart.setPosition(foundItem.position);
            var infoWindowContent = '<b>' + foundItem.description + '</b><br>Start';
            infoWindowStart.setContent(infoWindowContent);
            infoWindowStart.open(map);
        };

        function selectEndChangeHandler() {
            var foundItem = markersPub.find(foundItem => foundItem.description == selectEnd.options[selectEnd.selectedIndex].text);
            // map.setCenter(centerPosition);
            // map.setZoom(14);
            fitBoundsPositions.end = foundItem.position;
            fitBoundsStartEnd();
            infoWindowEnd.setPosition(foundItem.position);
            var infoWindowContent = '<b>' + foundItem.description + '</b><br>Destination';
            infoWindowEnd.setContent(infoWindowContent);
            infoWindowEnd.open(map);
        };

        function selectCategoryChangeHandler() {
            selectedCategory = selectCategory.options[selectCategory.selectedIndex].text
            selectedCategory2 = selectCategory2.options[selectCategory2.selectedIndex].text
            setSelectOptions(selectedCategory, selectedCategory2);
            setMarkers(selectedCategory, selectedCategory2);
            infoWindowStart.close();
            infoWindowEnd.close();
        };

        function handleLocationError(browserHasGeolocation, infoWindowCurrent, pos) {
            infoWindowCurrent.setPosition(pos);
            infoWindowCurrent.setContent(browserHasGeolocation ?
              'Error: The Geolocation service failed.' :
              'Error: Your browser doesn\'t support geolocation.');
            infoWindowCurrent.open(map);
        }

        function fitBoundsStartEnd(){
            var bounds = new google.maps.LatLngBounds();
            if (currentPosition) bounds.extend(currentPosition);
            if (fitBoundsPositions.start) bounds.extend(fitBoundsPositions.start);
            if (fitBoundsPositions.end) bounds.extend(fitBoundsPositions.end);
            map.fitBounds(bounds);
        }
        function fitBoundsAll(){
            var bounds = new google.maps.LatLngBounds();
            markersPub.forEach(function(markersPub){
                bounds.extend(markersPub.position);
            });
            bounds.extend(currentPosition);
            map.fitBounds(bounds);            
        }

    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAsAduur2QPUWBMNEhKNG5cFwVy4wAJf5g&callback=initMap">
    </script>
</body>
</html>